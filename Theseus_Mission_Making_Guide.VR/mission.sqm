version=53;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=1;
	class ItemIDProvider
	{
		nextID=204;
	};
	class LayerIndexProvider
	{
		nextID=95;
	};
	class Camera
	{
		pos[]={65.466972,45.782475,219.61061};
		dir[]={0.00025962712,-0.99669194,0.081971623};
		up[]={0.0031571239,0.081035018,0.99671251};
		aside[]={1.0000497,-7.3834713e-008,-0.0031670162};
	};
};
binarizationWanted=0;
addons[]=
{
	"Desert",
	"A3_Characters_F",
	"A3_Weapons_F",
	"A3_Characters_F_Heads",
	"ace_goggles",
	"A3_Soft_F_Exp_LSV_01",
	"tacs_units",
	"ace_medical_treatment",
	"tac_armory",
	"A3_Weapons_F_Ammoboxes",
	"ace_explosives",
	"A3_Props_F_Exp_Military_Camps",
	"A3_Modules_F_Curator_Curator",
	"A3_Data_F_Curator_Virtual",
	"A3_Ui_F",
	"A3_Structures_F_Furniture",
	"A3_Structures_F_Heli_Items_Electronics",
	"A3_Props_F_Orange_Items_Electronics",
	"A3_Modules_F",
	"A3_Modules_F_Effects",
	"A3_Misc_F_Helpers",
	"RHNET_Actionbuilder"
};
class AddonsMetaData
{
	class List
	{
		items=19;
		class Item0
		{
			className="Desert";
			name="Desert";
		};
		class Item1
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Weapons_F";
			name="Arma 3 Alpha - Weapons and Accessories";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item3
		{
			className="ace_goggles";
			name="ACE3 - Goggles";
			author="ACE-Team";
			url="http://ace3mod.com/";
		};
		class Item4
		{
			className="A3_Soft_F_Exp";
			name="Arma 3 Apex - Unarmored Land Vehicles";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item5
		{
			className="tacs_units";
			name="Theseus Services - Units";
			author="Theseus Services Team";
			url="https://github.com/Theseus-Aegis/TheseusServices";
		};
		class Item6
		{
			className="ace_medical_treatment";
			name="ACE3 - Medical Treatment";
			author="ACE-Team";
			url="http://ace3mod.com/";
		};
		class Item7
		{
			className="tac_armory";
			name="TAC - Armory";
			author="TAC Mod Team";
			url="http://www.theseus-aegis.com/";
		};
		class Item8
		{
			className="ace_explosives";
			name="ACE3 - Explosives";
			author="ACE-Team";
			url="http://ace3mod.com/";
		};
		class Item9
		{
			className="A3_Props_F_Exp";
			name="Arma 3 Apex - Decorative and Mission Objects";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item10
		{
			className="A3_Modules_F_Curator";
			name="Arma 3 Zeus Update - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item11
		{
			className="A3_Data_F_Curator";
			name="Arma 3 Zeus Update - Main Configuration";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item12
		{
			className="A3_Ui_F";
			name="Arma 3 - User Interface";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item13
		{
			className="A3_Structures_F";
			name="Arma 3 - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item14
		{
			className="A3_Structures_F_Heli";
			name="Arma 3 Helicopters - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item15
		{
			className="A3_Props_F_Orange";
			name="Arma 3 Orange - Decorative and Mission Objects";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item16
		{
			className="A3_Modules_F";
			name="Arma 3 Alpha - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item17
		{
			className="A3_Misc_F";
			name="Arma 3 - 3D Aids and Helpers";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item18
		{
			className="RHNET_Actionbuilder";
			name="RHNET_Actionbuilder";
		};
	};
};
randomSeed=14040693;
class ScenarioData
{
	author="Tyrone";
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="cba_settings_hasSettingsFile";
			expression="false";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"BOOL"
						};
					};
					value=1;
				};
			};
		};
		nAttributes=1;
	};
};
class Mission
{
	class Intel
	{
		timeOfChanges=1800.0002;
		startWeather=0;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		wavesForced=1;
		windForced=1;
		year=2035;
		day=28;
		hour=13;
		minute=37;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=10;
		class Item0
		{
			dataType="Layer";
			name="Example Layer";
			class Entities
			{
				items=3;
				class Item0
				{
					dataType="Layer";
					name="Example Hidden Layer";
					state=2;
					class Entities
					{
						items=1;
						class Item0
						{
							dataType="Comment";
							class PositionInfo
							{
								position[]={99.999008,5,218.05498};
							};
							title="Hidden Layer";
							description="I was hidden!";
							id=11;
						};
					};
					id=8;
				};
				class Item1
				{
					dataType="Layer";
					name="Example Locked Layer";
					state=1;
					class Entities
					{
						items=1;
						class Item0
						{
							dataType="Comment";
							class PositionInfo
							{
								position[]={91.97747,5,218.06131};
							};
							title="Locked Layer";
							description="i was immovable!";
							id=10;
						};
					};
					id=9;
				};
				class Item2
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={96.002579,5,222.00256};
					};
					title="Layers";
					description="Layers are utilised to keep things ""clean"" in editor." \n "" \n "Layers are created from the left-hand side toolbar. At the very bottom there are 5 icons," \n "Delete Layer > Create Layer > Move to Root > Toggle Layer Transformation > Toggle Layer Visibility" \n "" \n "Layers can always go inside layers, They can also be renamed by double clicking the layer and setting it's name." \n "" \n "Toggle Layer Transformation will essentially lock the layer. This is useful for placing several things close by without accidentally moving another object you didn't intend to. (This does not hide them from the mission.)" \n "" \n "Toggle Layer Visibility hides the object altogether, you will be unable to see it or edit it. However you can still see it on the left-hand toolbar." \n "" \n "You can move objects into the layer by simply dragging them from the left-hand bar. If you highlight all objects in an area it will highlight them all and you only need to find one that is highlighted, once it is dragged it will move all of the selected objects too." \n "" \n "There is an example Layer that you can test this on.";
					id=6;
				};
			};
			id=7;
		};
		class Item1
		{
			dataType="Layer";
			name="Players";
			class Entities
			{
				items=9;
				class Item0
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=1;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={162.08223,5.0014391,226.00117};
								angles[]={0,3.1209626,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
								class Inventory
								{
									class uniform
									{
										typeName="U_B_CombatUniform_mcam";
										isBackpack=0;
									};
									map="ItemMap";
									compass="ItemCompass";
									watch="ItemWatch";
									gps="ItemGPS";
									goggles="G_Tactical_Clear";
								};
							};
							id=5;
							type="B_Survivor_F";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male04ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1;
										};
									};
								};
								nAttributes=2;
							};
						};
					};
					class Attributes
					{
					};
					id=4;
				};
				class Item1
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=2;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={158.1098,5.0014391,222.00389};
								angles[]={0,3.0725622,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								description="Group Leader@Fluffy 1-1";
								isPlayable=1;
							};
							id=14;
							type="B_Survivor_F";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male09ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.04;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={162.09492,5.0014391,221.98888};
								angles[]={0,3.1218419,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								description="Not Group Leader";
								isPlayable=1;
							};
							id=15;
							type="B_Survivor_F";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male05ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.99000001;
										};
									};
								};
								nAttributes=2;
							};
						};
					};
					class Attributes
					{
					};
					id=13;
				};
				class Item2
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={159.67281,5,246.11002};
					};
					title="First Steps";
					description="First steps on making any mission is usually placing your playable units, either via the Theseus compositions or placing your own units how you would like them." \n "" \n "Once you have at least ONE unit placed it will automatically be marked as the ""Player"" unit. And you can then save." \n "" \n "Once the mission is saved, it is generally a good idea to press CTRL+S frequently to keep your mission up to date." \n "" \n "My recommendation would be placing the Theseus composition then making changes from there." \n "That gives us a respawn, spectator screen, headless clients and emergency zeus slot.";
					id=2;
				};
				class Item3
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={159.99762,5,217.91106};
					};
					title="Grouping Units";
					description="If you're creating your own custom groups for player units, or even enemy units. You can group them together by right-clicking a unit that is not going to be the group leader," \n "" \n "Connect > Group To then click on the unit that will be group leader." \n "" \n "This can also be done quickly by CTRL+Dragging the unit to the group leader." \n "" \n "Ungrouping units is done much the same way, except for you simply hover over the ""grouping line"" and press DEL. Or you can CTRL+Drag the unit you want to ungroup away from any unit.";
					id=17;
				};
				class Item4
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={160.03802,5,221.89148};
					};
					title="Naming";
					description="If your mission is a special kind of mission where you would like the player units to be named something specific," \n "Object: Control > Role Description" \n "" \n "You can set this as whatever you like." \n "" \n "Additionally if you want the group name to also be set instead of ""Alpha 1-1"" you wanted ""Fluffy 1-1""" \n "The role description could be" \n "Example@Fluffy 1-1" \n "" \n "The ""group name"" would only need to be set on the Group leaders role description, the others are unnecessary." \n "" \n "Group leaders are identified by the rectangle above the unit itself, This can also be edited for group traits and behaviours.";
					id=12;
				};
				class Item5
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={160.05035,5,225.91978};
					};
					title="Player/Playable Units";
					description="The first unit you place will always be marked as ""Player"", this can obviously be removed via the unit attributes under ""Object : Control""." \n "" \n "Any unit placed after this one will not be marked as a player/playable unit unless you directly set it otherwise." \n "" \n "Unit attributes > Object: Control > Playable Checkbox" \n "" \n "Always be 100% sure to set up your playable units before anything else, it's not a good thing to forget." \n "" \n "You can see the difference in colour on the circles of a Player and Playable unit. A regular non-playable unit will have no red/pink outline on the coloured circle.";
					id=3;
				};
				class Item6
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={157.96239,5,219.90355};
					};
					title="The Attributes Menu - Part 1";
					description="Object: Type  " \n "Can be largely ignored. If you wish to switch it to another unit type I.E, Survivor to Team Leader. It can be done via this menu.  " \n "  " \n "Object: Init  " \n "If you require this unit for some special action via a trigger, you give it a variable name. It doesn't have to be elaborate.  " \n "  " \n "The init box is for any command that is to be ran upon mission initialisation, i.e if you wish this unit to stand completely still and not move, this is where you would input said command.  " \n "  " \n "Object: Transformation  " \n "This is for fine tuning rotation and positions. It usually would only apply for objects and not players.  " \n "  " \n "Object: Control  " \n "This has already been covered!  " \n "  " \n "Object: States  " \n "States are not often something that matters too much, you can set the ai ""Skill"", ""Health/Armor"" and ""Ammunition"".  " \n "  " \n "If you want your unit to die on mission start, set the Health/Armor on 0%. It works the same way with Ammunition.  " \n "  " \n "Skill should be untouched as it is always set by our server difficulty.  " \n "  " \n "Object: Special States  " \n "Nothing in this box is realistically worth changing on any unit. ";
					id=16;
				};
				class Item7
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=1;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={158.01749,5.0014391,225.99745};
								angles[]={0,3.1209548,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayer=1;
								class Inventory
								{
									class uniform
									{
										typeName="U_B_CombatUniform_mcam";
										isBackpack=0;
									};
									map="ItemMap";
									compass="ItemCompass";
									watch="ItemWatch";
									gps="ItemGPS";
									goggles="G_Tactical_Clear";
								};
							};
							id=1;
							type="B_Survivor_F";
						};
					};
					class Attributes
					{
					};
					id=0;
				};
				class Item8
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={162.06778,5,219.88441};
					};
					title="The Attributes Menu - Part 2";
					description="Object: Identity  " \n "This is what is used when your mission requires a certain person, I.E if we were to kill a target named ""John James"" you can set his Name under identity to ""John James"". Once he has been killed we can confirm the kill via the dog tag.  " \n "  " \n "Face can also be set to ensure your target looks the same as a picture provided for example.  " \n "  " \n "I often use this to set Friendly AI to have no voice, It's not immersive to hear 20 AI yelling ""CONTACT, MAN, 20 METERS, FRONT."" setting the Voice to ""No Voice"" eliminates that.  " \n "  " \n "Object: Presence  " \n "Probability of presence is useful for scenarios where randomization placement matters. If you had 5 units placed with 20% probability of presence. It is extremely unlikely all 5 will spawn, maybe none will.  " \n "Kinda the point of randomisation really.  " \n "  " \n "Object: Electronics & Sensors  " \n "Not used on Units at all.  " \n "  " \n "Object: ACE Options  " \n "This sets all ACE attributes, if you want everybody to be a medic simply give everybody the Is Medic ""Regular Medic"" trait.  " \n "  " \n "Handcuffed/Surrender are useful tools for HVTs that we're meant to capture.  " \n "  " \n "Performance factor should be left untouched.  " \n "  " \n "Headless Blacklist simply means that this AI will not be transferred to a headless client. I've never used it and i don't really see a reason to, but it's there.";
					id=202;
				};
			};
			id=26;
		};
		class Item2
		{
			dataType="Layer";
			name="Vehicles";
			class Entities
			{
				items=5;
				class Item0
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={221.65182,5,230.48691};
					};
					title="Vehicle Attributes";
					description="Much like the player attributes, vehicles have the same selections with a few additions." \n "" \n "Object: States" \n "States has an additional drop down box on vehicles, This is where you can set it as unlocked, Locked or Locked for Players. (Default is always unlocked.)" \n "" \n "Object: Special States" \n "Special states is worth using on vehicles, for performance reasons if there are vehicles scattered around that serve no purpose other than immersion or cinematic factors. Make them simple objects. This renders it as basically a minimal object with no functionality and does not hinder performance as badly." \n "" \n "Object: Equipment Storage " \n "If this vehicle is not designed to be carrying something relevant to the mission, ALWAYS clear it's inventory. This saves on valuable performance and stops us from getting access to something that you may not have wanted us to have to begin with." \n "" \n "Object: TAC Attributes " \n "This is simply a checkbox to make an object/vehicle an Armory point. It's not advised to do this on a vehicle." \n "" \n "Object: ACE Arsenal" \n "This is where you can set up an Arsenal with items of your own choosing, again it's not advisable that it's done on a vehicle.";
					id=25;
				};
				class Item1
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={224.05994,5,245.91911};
					};
					title="Vehicle Placements";
					description="When placing vehicles for your mission, there are a variety of things you can do. If you wanted to place an empty vehicle with no units inside of it, you can press ALT+Click when placing." \n "" \n "Otherwise it will always be populated by AI, if however you don't want the AI that are automatically placed inside of it to be there, you can delete them out and drag units of your choosing inside of it.";
					id=19;
				};
				class Item2
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={221.65134,5,220.54352};
					};
					title="Vehicle Customisation";
					description="Right clicking on any vehicle > Edit Vehicle Appearance." \n "" \n "This will open up any ability you have to the visual appearance of the vehicle." \n "" \n "If at any time you decide to revert it back, simply right click > Reset Vehicle Appearance.";
					id=28;
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={226.61955,7.1761513,220.39236};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						textures="Black";
					};
					id=31;
					type="B_T_LSV_01_unarmed_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ammoBox";
							expression="[_this,_value] call bis_fnc_initAmmoBox;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="[[[[],[]],[[],[]],[[],[]],[[],[]]],false]";
								};
							};
						};
						class Attribute1
						{
							property="VehicleCustomization";
							expression="if (local _this) then {if (isSimpleObject _this) then {_this setVariable ['bis_fnc_initVehicle_customization',_value]} else {([_this] + _value + [true]) call (uinamespace getvariable 'bis_fnc_initVehicle');};};";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"ARRAY"
										};
									};
									class value
									{
										items=2;
										class Item0
										{
											class data
											{
												class type
												{
													type[]=
													{
														"ARRAY"
													};
												};
											};
										};
										class Item1
										{
											class data
											{
												class type
												{
													type[]=
													{
														"ARRAY"
													};
												};
												class value
												{
													items=8;
													class Item0
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="HideDoor1";
														};
													};
													class Item1
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"SCALAR"
																};
															};
															value=1;
														};
													};
													class Item2
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="HideDoor2";
														};
													};
													class Item3
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"SCALAR"
																};
															};
															value=1;
														};
													};
													class Item4
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="HideDoor3";
														};
													};
													class Item5
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"SCALAR"
																};
															};
															value=1;
														};
													};
													class Item6
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="HideDoor4";
														};
													};
													class Item7
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"SCALAR"
																};
															};
															value=1;
														};
													};
												};
											};
										};
									};
								};
							};
						};
						nAttributes=2;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={226.75656,7.1761513,230.27357};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=30;
					type="B_T_LSV_01_unarmed_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ammoBox";
							expression="[_this,_value] call bis_fnc_initAmmoBox;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="[[[[],[]],[[],[]],[[],[]],[[],[]]],false]";
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=27;
		};
		class Item3
		{
			dataType="Layer";
			name="Waypoints";
			class Entities
			{
				items=9;
				class Item0
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=7;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={401.1127,5.0014391,212.18373};
							};
							side="West";
							flags=7;
							class Attributes
							{
							};
							id=34;
							type="B_Soldier_F";
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={402.17294,5.0014391,209.1824};
							};
							side="West";
							flags=5;
							class Attributes
							{
							};
							id=35;
							type="B_Soldier_F";
						};
						class Item2
						{
							dataType="Waypoint";
							position[]={400.86417,5,239.38516};
							formation="COLUMN";
							speed="NORMAL";
							combat="SAFE";
							class Effects
							{
							};
							showWP="NEVER";
							id=36;
							type="Move";
						};
						class Item3
						{
							dataType="Waypoint";
							position[]={430.49319,5,239.31017};
							formation="STAG COLUMN";
							speed="FULL";
							combat="COMBAT";
							class Effects
							{
							};
							showWP="NEVER";
							id=37;
							type="Move";
						};
						class Item4
						{
							dataType="Waypoint";
							position[]={430.6412,5,209.58417};
							formation="LINE";
							speed="LIMITED";
							combat="AWARE";
							class Effects
							{
							};
							showWP="NEVER";
							id=38;
							type="Move";
						};
						class Item5
						{
							dataType="Waypoint";
							position[]={400.95016,5,209.57916};
							formation="VEE";
							speed="LIMITED";
							combat="CARELESS";
							class Effects
							{
							};
							showWP="NEVER";
							id=39;
							type="Move";
						};
						class Item6
						{
							dataType="Waypoint";
							position[]={400.95316,5,209.93817};
							type="Cycle";
							class Effects
							{
							};
							showWP="NEVER";
							id=40;
						};
					};
					class Attributes
					{
					};
					id=33;
				};
				class Item1
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={415.49704,5,226.35034};
					};
					title="Waypoint Behaviours";
					description="Each of the provided waypoints placed down have a different behaviour, something the AI will try to adhere to as it moves from one to the next." \n "" \n "Double clicking on the waypoints will open the attributes.";
					id=44;
				};
				class Item2
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={411.4935,5,226.3275};
					};
					title="Waypoint Cycles";
					description="Much like the example here, if the last waypoint ends in ""CYCLE"" they will switch back to the very first waypoint and do it all over again. It's better to have the waypoints end near the first one so they look like they're cycling a specific area.";
					id=47;
				};
				class Item3
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={419.48154,5,226.39249};
					};
					title="Waypoint Movement Speeds";
					description="Generally it is always better to set waypoint behaviour as ""safe"" they will walk around and switch to ""aware"" or even ""combat"" upon seeing players. Limiting speed will mean that no matter what they will only ever be able to walk.";
					id=45;
				};
				class Item4
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={407.57162,5,226.31908};
					};
					title="Waypoint Types";
					description="Pressing F4 in the editor will switch to the ""Waypoint"" tab. You'll be able to see the full list of waypoints there. You can also SHIFT+Right click place all your waypoints, then switch them using " \n """Waypoint - Type"" attribute menu to what you require them to be.";
					id=46;
				};
				class Item5
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={416.17514,5,246.04378};
					};
					title="Waypoints";
					description="AI Waypoints are issued from the ""Group Leader"" " \n "" \n "They can be set by first clicking the Group leader, then holding SHIFT+Right click";
					id=41;
				};
				class Item6
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={427.52164,5,226.47702};
					};
					title="Generic Vehicle Waypoints";
					description="GET IN : AI will move to the vehicle this waypoint is on and mount into it." \n "" \n "GET OUT : AI will disembark from the vehicle at this waypoint (Including the driver)" \n "" \n "UNLOAD : Vehicle will unload without the driver.";
					id=153;
				};
				class Item7
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={423.4957,5,226.40112};
					};
					title="Generic Infantry Waypoints";
					description="SEEK AND DESTROY : AI will move towards this spot searching for targets to engage." \n "" \n "HOLD : AI will hold the position until specified otherwise." \n "" \n "GUARD : AI will move around the area and hold it against enemy forces.";
					id=152;
				};
				class Item8
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={617.8858,5,224.04489};
					};
					title="Next Waypoint";
					description="Sync the last placed waypoint to the previously placed waypoint.";
					id=203;
				};
			};
			id=32;
		};
		class Item4
		{
			dataType="Layer";
			name="Editor Top Bar";
			class Entities
			{
				items=9;
				class Item0
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={85.988281,5,235.97455};
					};
					title="Edit";
					description="Undo > CTRL+Z" \n "Redo > CTRL+Y" \n "" \n "Really useful for fixing minor mistakes." \n "" \n "You can select everything that is currently on your screen with CTRL+A" \n "" \n "# Toggles surface snapping this is quite helpful if you want to specifically place something slightly under the ground, or over it." \n "" \n "/  Toggles waypoint snapping which will toggle whether or not the waypoints you place snap to the ground or terrain height.";
					id=50;
				};
				class Item1
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={95.92292,5,246.06755};
					};
					title="Editor Top Bar";
					description="These will cover what they provide." \n "Scenario > Edit > View > Attributes > Tools > Settings > Play > Help > TAC";
					id=48;
				};
				class Item2
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={106.05889,5,235.99654};
					};
					title="Play";
					description="This is designed for playtesting your mission." \n "" \n "I only recommend Playing it in Multiplayer as some things don't work in SP, others only work in MP. " \n "";
					id=58;
				};
				class Item3
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={81.927391,5,235.92006};
					};
					title="Scenario";
					description="This is much like ""File"" in most document editors." \n "It allows you open New editor scenarios, Load others and save the current ones." \n "" \n "It also allows you to ""Merge"" another scenario into the currently opened one. Although this is not recommended unless you're merging it from the same map as the positions stay the exact same.";
					id=49;
				};
				class Item4
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={101.96796,5,236.02335};
					};
					title="Settings";
					description="Preferences (CTRL+K) is where you can set the Editor to your own preference with things like Movement speed, auto save times etc." \n "" \n "My only recommendation is you disable auto binarizing scenario files." \n "" \n "The other options are essentially your in-game video/audio/game options.";
					id=57;
				};
				class Item5
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={109.96598,5,236.02159};
					};
					title="TAC";
					description="The Autotest. This is the holy grail of all mission making as it should be straight checkmarks." \n "" \n "Any Red X and you will need to solve it. Hovering over the name of the field will tell you exactly what it is checking.";
					id=60;
				};
				class Item6
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={97.940994,5,236.01874};
					};
					title="Tools";
					description="The only really useful part of this for Mission makers is the Functions viewer." \n "This can give you animations and other useful things. Although you will have to actually find the things you're looking for.";
					id=56;
				};
				class Item7
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={90.081619,5,236.01288};
					};
					title="View";
					description="A lot of this is self-explanatory, with some minor exceptions." \n "" \n "CTRL+T will toggle the map to how it looks in-game, as opposed to the editor version of it." \n "" \n "L will toggle the flashlight, it makes creating night-missions so much easier than just using Night vision. Although i guess you could just leave it as daytime until you're done.";
					id=54;
				};
				class Item8
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={93.947762,5,236.01466};
					};
					title="Attributes";
					description="This is probably the most used of all options in this list." \n "" \n "General : None of this is ever set in editor, it's always done by the external ""Description.ext"" file provided in the contract template." \n "" \n "NOTE: Some missions may get broken by ""dependencies"" if we phase out a  mod that your mission requires and you have ""binarize this scenario file"" checked, it is unrecoverable. Leave unchecked and i can recover it for you." \n "" \n "The only exception to this is ""Independent allegiance"", you can set them as friendly or hostile to Blufor/Opfor or even both. By default Independents are friendly to Blufor and hostile to Opfor." \n "" \n "This can be seen by the Handshake symbol meaning friendly, two swords crossing as hostile." \n "" \n "Environment: This is where the time/date and weather is set." \n "Be aware that if you set the date to Dec 31 2020, it will be darker at different times compared to July 1st 2020. The game observes time of year aswell as day to provide a more realistic scenario." \n "" \n "Multiplayer: Can be ignored." \n "Performance: Can be ignored.";
					id=55;
				};
			};
			id=61;
		};
		class Item5
		{
			dataType="Layer";
			name="Theseus Contract Template";
			class Entities
			{
				items=34;
				class Item0
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=8;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={291.23889,5.0014391,221.42278};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
							};
							id=65;
							type="tacs_Unit_B_TeamLeader";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male08ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.01;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={289.2392,5.0014391,221.41299};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=66;
							type="tacs_Unit_B_Contractor";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={287.23901,5.0014391,221.40273};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=67;
							type="tacs_Unit_B_Contractor";
						};
						class Item3
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={285.23935,5.0014391,221.39296};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=68;
							type="tacs_Unit_B_Contractor";
						};
						class Item4
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={283.2392,5.0014391,221.38318};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=69;
							type="tacs_Unit_B_Contractor";
						};
						class Item5
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={281.23901,5.0014391,221.37338};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=70;
							type="tacs_Unit_B_Contractor";
						};
						class Item6
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={279.23932,5.0014391,221.36362};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=71;
							type="tacs_Unit_B_Contractor";
						};
						class Item7
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={277.23917,5.0014391,221.35335};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=72;
							type="tacs_Unit_B_Contractor";
						};
					};
					class Attributes
					{
					};
					id=64;
				};
				class Item1
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=8;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={291.24915,5.0014391,219.42261};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
							};
							id=74;
							type="tacs_Unit_B_TeamLeader";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male09ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.95999998;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={289.24896,5.0014391,219.41284};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=75;
							type="tacs_Unit_B_Contractor";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={287.24881,5.0014391,219.40305};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=76;
							type="tacs_Unit_B_Contractor";
						};
						class Item3
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={285.24911,5.0014391,219.39328};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=77;
							type="tacs_Unit_B_Contractor";
						};
						class Item4
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={283.24896,5.0014391,219.38301};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=78;
							type="tacs_Unit_B_Contractor";
						};
						class Item5
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={281.24878,5.0014391,219.37323};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=79;
							type="tacs_Unit_B_Contractor";
						};
						class Item6
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={279.24911,5.0014391,219.36345};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=80;
							type="tacs_Unit_B_Contractor";
						};
						class Item7
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={277.24893,5.0014391,219.35367};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=81;
							type="tacs_Unit_B_Contractor";
						};
					};
					class Attributes
					{
					};
					id=73;
				};
				class Item2
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=4;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={289.25873,5.0014391,217.41266};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
							};
							id=83;
							type="tacs_Unit_B_Medic";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male10ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.97000003;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={289.26855,5.0014391,215.41298};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=84;
							type="tacs_Unit_B_Medic";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male10ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.97000003;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={287.25858,5.0014391,217.40288};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=85;
							type="tacs_Unit_B_Medic";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male10ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.97000003;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item3
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={287.26886,5.0014391,215.4032};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=86;
							type="tacs_Unit_B_Medic";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male10ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=0.97000003;
										};
									};
								};
								nAttributes=2;
							};
						};
					};
					class Attributes
					{
					};
					id=82;
				};
				class Item3
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=4;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={281.25903,5.0014391,217.37355};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
							};
							id=88;
							type="tacs_Unit_B_Engineer";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male03ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.01;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={279.25888,5.0014391,217.36328};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=89;
							type="tacs_Unit_B_Engineer";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male03ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.01;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={279.26868,5.0014391,215.3636};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=90;
							type="tacs_Unit_B_Engineer";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male03ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.01;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item3
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={281.26883,5.0014391,215.37338};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=91;
							type="tacs_Unit_B_Engineer";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male03ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1.01;
										};
									};
								};
								nAttributes=2;
							};
						};
					};
					class Attributes
					{
					};
					id=87;
				};
				class Item4
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=2;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={285.26355,5.0014391,216.39302};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=7;
							class Attributes
							{
								isPlayable=1;
							};
							id=93;
							type="tacs_Unit_B_PilotHeli";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male11ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1;
										};
									};
								};
								nAttributes=2;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={283.26385,5.0014391,216.38324};
								angles[]={0,6.2782536,0};
							};
							side="West";
							flags=5;
							class Attributes
							{
								isPlayable=1;
							};
							id=94;
							type="tacs_Unit_B_PilotHeli";
							class CustomAttributes
							{
								class Attribute0
								{
									property="speaker";
									expression="_this setspeaker _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"STRING"
												};
											};
											value="Male11ENG";
										};
									};
								};
								class Attribute1
								{
									property="pitch";
									expression="_this setpitch _value;";
									class Value
									{
										class data
										{
											class type
											{
												type[]=
												{
													"SCALAR"
												};
											};
											value=1;
										};
									};
								};
								nAttributes=2;
							};
						};
					};
					class Attributes
					{
					};
					id=92;
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={279.98099,5,230.05833};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=103;
					type="ACE_medicalSupplyCrate_advanced";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ammoBox";
							expression="[_this,_value] call bis_fnc_initAmmoBox;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="[[[[],[]],[[],[]],[[],[]],[[],[]]],false]";
								};
							};
						};
						class Attribute1
						{
							property="ace_isMedicalFacility";
							expression="_this setVariable [""ace_medical_isMedicalFacility"",_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"BOOL"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ace_arsenal_attribute";
							expression="if (!is3DEN) then {[_this, +_value] call ace_arsenal_fnc_attributeInit}";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"ARRAY"
										};
									};
									class value
									{
										items=2;
										class Item0
										{
											class data
											{
												class type
												{
													type[]=
													{
														"ARRAY"
													};
												};
												class value
												{
													items=21;
													class Item0
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_packingBandage";
														};
													};
													class Item1
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_elasticBandage";
														};
													};
													class Item2
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_fieldDressing";
														};
													};
													class Item3
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_bloodIV";
														};
													};
													class Item4
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_bloodIV_250";
														};
													};
													class Item5
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_bloodIV_500";
														};
													};
													class Item6
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_bodyBag";
														};
													};
													class Item7
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_epinephrine";
														};
													};
													class Item8
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_morphine";
														};
													};
													class Item9
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="tac_medical_painkillers";
														};
													};
													class Item10
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_plasmaIV";
														};
													};
													class Item11
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_plasmaIV_250";
														};
													};
													class Item12
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_plasmaIV_500";
														};
													};
													class Item13
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_salineIV";
														};
													};
													class Item14
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_salineIV_250";
														};
													};
													class Item15
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_salineIV_500";
														};
													};
													class Item16
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_splint";
														};
													};
													class Item17
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_surgicalKit";
														};
													};
													class Item18
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_tourniquet";
														};
													};
													class Item19
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_adenosine";
														};
													};
													class Item20
													{
														class data
														{
															class type
															{
																type[]=
																{
																	"STRING"
																};
															};
															value="ACE_quikclot";
														};
													};
												};
											};
										};
										class Item1
										{
											class data
											{
												class type
												{
													type[]=
													{
														"SCALAR"
													};
												};
												value=0;
											};
										};
									};
								};
							};
						};
						nAttributes=3;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={283.9689,5.8924227,230.55545};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=95;
					type="tac_armory_Locker";
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={282.30042,5.8924227,230.55321};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=96;
					type="tac_armory_Locker";
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={285.61005,5.8924227,230.55635};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=97;
					type="tac_armory_Locker";
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={283.97397,5.8924227,231.64066};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=105;
					type="tac_armory_Locker";
				};
				class Item10
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={282.30548,5.8924227,231.63841};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=106;
					type="tac_armory_Locker";
				};
				class Item11
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={285.61511,5.8924227,231.64156};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=107;
					type="tac_armory_Locker";
				};
				class Item12
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={276.008,5.2840548,230.09801};
						angles[]={0,1.5707964,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=102;
					type="Box_NATO_AmmoOrd_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ammoBox";
							expression="[_this,_value] call bis_fnc_initAmmoBox;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="[[[[],[]],[[""DemoCharge_Remote_Mag"",""SatchelCharge_Remote_Mag""],[6,2]],[[],[]],[[],[]]],false]";
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item13
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={290.00607,6.0431652,230.12167};
						angles[]={0,3.1415927,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						name="SpecScreen";
						disableSimulation=1;
					};
					id=98;
					type="Land_TripodScreen_01_large_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ObjectTextureCustom0";
							expression="_this setObjectTextureGlobal [0,_value]";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="x\tacr\addons\images\general\SpecScreen.paa";
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item14
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={301.72382,5,220.38063};
						angles[]={0,3.1342137,0};
					};
					id=111;
					type="ModuleCurator_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleCurator_F_Owner";
							expression="_this setVariable ['Owner',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="#adminlogged";
								};
							};
						};
						class Attribute1
						{
							property="ModuleCurator_F_Forced";
							expression="_this setVariable ['Forced',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute2
						{
							property="ModuleCurator_F_Name";
							expression="_this setVariable ['Name',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="";
								};
							};
						};
						class Attribute3
						{
							property="ModuleCurator_F_Addons";
							expression="_this setVariable ['Addons',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=3;
								};
							};
						};
						nAttributes=4;
					};
				};
				class Item15
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={295.6853,5,220.2843};
						angles[]={0,3.1342137,0};
					};
					id=112;
					type="ModuleCurator_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleCurator_F_Owner";
							expression="_this setVariable ['Owner',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Zeus3";
								};
							};
						};
						class Attribute1
						{
							property="ModuleCurator_F_Forced";
							expression="_this setVariable ['Forced',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ModuleCurator_F_Name";
							expression="_this setVariable ['Name',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="";
								};
							};
						};
						class Attribute3
						{
							property="ModuleCurator_F_Addons";
							expression="_this setVariable ['Addons',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=3;
								};
							};
						};
						nAttributes=4;
					};
				};
				class Item16
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={297.70105,5,220.31236};
						angles[]={0,3.1342137,0};
					};
					id=113;
					type="ModuleCurator_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleCurator_F_Owner";
							expression="_this setVariable ['Owner',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Zeus2";
								};
							};
						};
						class Attribute1
						{
							property="ModuleCurator_F_Forced";
							expression="_this setVariable ['Forced',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ModuleCurator_F_Name";
							expression="_this setVariable ['Name',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="";
								};
							};
						};
						class Attribute3
						{
							property="ModuleCurator_F_Addons";
							expression="_this setVariable ['Addons',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=3;
								};
							};
						};
						nAttributes=4;
					};
				};
				class Item17
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={299.7619,5,220.34076};
						angles[]={0,3.1342137,0};
					};
					id=114;
					type="ModuleCurator_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleCurator_F_Owner";
							expression="_this setVariable ['Owner',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Zeus1";
								};
							};
						};
						class Attribute1
						{
							property="ModuleCurator_F_Forced";
							expression="_this setVariable ['Forced',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ModuleCurator_F_Name";
							expression="_this setVariable ['Name',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="";
								};
							};
						};
						class Attribute3
						{
							property="ModuleCurator_F_Addons";
							expression="_this setVariable ['Addons',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=3;
								};
							};
						};
						nAttributes=4;
					};
				};
				class Item18
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={299.81909,5,212.30826};
						angles[]={0,1.5781281,0};
					};
					name="headlessclient1";
					isPlayable=1;
					id=99;
					type="HeadlessClient_F";
				};
				class Item19
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={297.82324,5,212.29764};
						angles[]={0,1.5781281,0};
					};
					name="headlessclient2";
					isPlayable=1;
					id=100;
					type="HeadlessClient_F";
				};
				class Item20
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={295.83209,5,212.28171};
						angles[]={0,1.5781281,0};
					};
					name="headlessclient3";
					isPlayable=1;
					id=101;
					type="HeadlessClient_F";
				};
				class Item21
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={299.71478,5,218.32033};
						angles[]={0,3.1342137,0};
					};
					name="Zeus1";
					isPlayable=1;
					description="Zeus";
					id=108;
					type="VirtualCurator_F";
				};
				class Item22
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={297.7359,5,218.30328};
						angles[]={0,3.1342137,0};
					};
					name="Zeus2";
					isPlayable=1;
					description="Zeus";
					id=109;
					type="VirtualCurator_F";
				};
				class Item23
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={295.72101,5,218.29086};
						angles[]={0,3.1342137,0};
					};
					name="Zeus3";
					isPlayable=1;
					description="Zeus";
					id=110;
					type="VirtualCurator_F";
				};
				class Item24
				{
					dataType="Marker";
					position[]={299.57648,5,229.18668};
					name="respawn_west";
					type="Empty";
					id=104;
				};
				class Item25
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={283.96863,5,228.07928};
						angles[]={0,0.023461819,0};
					};
					title="Armory Boxes";
					description="By default the template has 6, But it's often better for you to copy & paste them so we have enough for all players who turn up.";
					id=120;
				};
				class Item26
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={286.77341,5,246.06729};
					};
					title="Contract Template";
					description="This by default will always include" \n "- Player units" \n "- Headless Clients" \n "- Respawn Point" \n "- Zeus Slots" \n "- Spectator Screen" \n "- Armory Boxes" \n "- Explosive Box" \n "- Medical Box";
					id=116;
				};
				class Item27
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={275.97665,5,227.99785};
						angles[]={0,0.023461819,0};
					};
					title="Explosives Box";
					description="This is optional. If the mission doesn't require us to blow anything up, or you simply don't want us to have it. Feel free to delete it.";
					id=122;
				};
				class Item28
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={297.75867,5,210.29272};
					};
					title="Headless clients";
					description="These are a requirement, it transfers the AI over to the Headless clients for performance. It allows the server to continue doing its servery things while the HCs deal with AI." \n "" \n "We only run 3 HCs and they will each need a slot, so just don't delete them at all.";
					id=119;
				};
				class Item29
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={279.96301,5,228.01724};
						angles[]={0,0.023461819,0};
					};
					title="Medical Box";
					description="This is a requirement, it functions as an ACE Arsenal so the medics have an easier time of getting enough medical supplies.";
					id=121;
				};
				class Item30
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={63.996025,5,223.99376};
					};
					title="README";
					description="Clearly this won't cover everything in existence. But if it's missing something you feel it shouldn't be missing, let me know and i'll add it in." \n "" \n "Or even better, be nice and write it out for me and i'll add it in!";
					id=63;
				};
				class Item31
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={300.87085,5,229.20811};
					};
					title="Respawn point";
					description="As intended, Respawn points can only be seen via the map screen, it's set by an ""empty"" marker. It doesn't show visibly on the in-game map." \n "" \n "The variable name is currently ""respawn_west"" because, we're ""West"" or ""Blufor""" \n "If our mission doesn't involve us playing as Blufor, change the variable name to" \n """respawn_east"" for Opfor" \n """respawn_guerrila"" for Independent" \n """respawn_civilian"" in the unlikely event we're civilians.";
					id=117;
				};
				class Item32
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={289.95529,5,228.04593};
						angles[]={0,0.023461819,0};
					};
					title="Spectator Screen";
					description="I personally see no reason to ever remove this. If we die it means we're not standing around doing absolutely nothing until the mission ends." \n "" \n "It also allows us to come out of spectator for Debrief.";
					id=123;
				};
				class Item33
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={297.6944,5,216.2672};
					};
					title="Zeus Slots";
					description="As per the mission making wiki on Github, Zeusing is allowed in missions." \n "" \n "A recent update offers optional Zeus slots for dead players to curate the mission. " \n "" \n "If you decide that you do not want this in your mission at all, you will need to remove the 3 Game master modules and the 3 Virtual zeus slots next to them." \n "" \n "DO NOT REMOVE THE GAME MASTER MODULE WITH #adminLogged IN ITS OWNER FIELD." \n "^ That will always be required.";
					id=118;
				};
			};
			id=115;
		};
		class Item6
		{
			dataType="Layer";
			name="Objects";
			class Entities
			{
				items=24;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.69888,5.4070597,228.24057};
						angles[]={0,3.1296446,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=134;
					type="Land_TableDesk_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.14487,5.2570419,228.2028};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=127;
					type="Land_PCSet_01_case_F";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={350.00632,5.2570419,228.18628};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=135;
					type="Land_PCSet_01_case_F";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.56918,5.8306732,227.98198};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=128;
					type="Land_PCSet_01_keyboard_F";
					atlOffset=0.0038022995;
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.43066,5.8306732,227.96545};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=136;
					type="Land_PCSet_01_keyboard_F";
					atlOffset=0.003800869;
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.00943,5.8263717,228.03436};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=129;
					type="Land_PCSet_01_mousepad_F";
					atlOffset=0.00058078766;
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.87091,5.8263717,228.01782};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=137;
					type="Land_PCSet_01_mousepad_F";
					atlOffset=0.00058031082;
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.00482,5.8550706,228.01758};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=130;
					type="Land_PCSet_01_mouse_F";
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.86627,5.8550706,228.00107};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=138;
					type="Land_PCSet_01_mouse_F";
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.54312,6.0768967,228.47357};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=131;
					type="Land_PCSet_01_screen_F";
					atlOffset=5.7220459e-006;
				};
				class Item10
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.10056,6.0774193,228.47726};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=132;
					type="Land_PCSet_01_screen_F";
				};
				class Item11
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.40457,6.0769019,228.45705};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=139;
					type="Land_PCSet_01_screen_F";
					atlOffset=0.82223415;
				};
				class Item12
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={349.96201,6.0774193,228.46072};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
					};
					id=140;
					type="Land_PCSet_01_screen_F";
				};
				class Item13
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={347.75369,5,228.33414};
					};
					title="Immersive/Cinematic Objects";
					description="For immersion you can place down objects, fleshing out some rooms in your scenario goes a long way." \n "" \n "The more objects that are placed, the lower performance will be. This can be countered with ""Simple Objects""" \n "Attributes > Special States > Simple Object" \n "" \n "Left and Right is an example of Regular vs Simple" \n "If it's greyed out it means that it's a simple object and we can't interact with it. If there are no plans for us to interact with it via the collect intel function, it should be a simple object." \n "" \n "Most assets have the simple object functionality with the exception of CUP. So if possible try to use Vanilla assets over CUP, but obviously there won't always be the same things." \n "" \n "Something to note: Simple Objects do not take damage, or have simulation enabled and thus will stay stationary in the event of an explosion.";
					id=126;
				};
				class Item14
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.83743,5.4070597,228.25711};
						angles[]={0,3.1296446,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=125;
					type="Land_TableDesk_F";
				};
				class Item15
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.13242,5.2570419,222.11856};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=142;
					type="Land_PCSet_01_case_F";
				};
				class Item16
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.55673,5.8306727,221.89774};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=143;
					type="Land_PCSet_01_keyboard_F";
					atlOffset=0.0038013458;
				};
				class Item17
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.99698,5.8263717,221.9501};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=144;
					type="Land_PCSet_01_mousepad_F";
					atlOffset=0.00058078766;
				};
				class Item18
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.99234,5.8550706,221.93332};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=145;
					type="Land_PCSet_01_mouse_F";
					atlOffset=1.4305115e-006;
				};
				class Item19
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.53067,6.0768909,222.38931};
						angles[]={6.276186,0,0.0064777941};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=146;
					type="Land_PCSet_01_screen_F";
				};
				class Item20
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={346.0881,6.0774193,222.39301};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=147;
					type="Land_PCSet_01_screen_F";
				};
				class Item21
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={345.82498,5.4070597,222.17285};
						angles[]={0,3.1296446,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=148;
					type="Land_TableDesk_F";
				};
				class Item22
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={343.73825,5,222.32915};
					};
					title="Disabling Simulation";
					description="If an object can't become a simple object, it's better to disable it's Simulation if there are no plans for us to interact with it, This more often than not applies to CUP Assets as of right now they have the option of simple object, but it doesn't retain it." \n "" \n "Disabling simulation will essentially ""freeze"" the object, it won't be affected by anything and will reduce the network traffic." \n "" \n "Disabled simulation can be seen by the red square on the object marker.";
					id=141;
				};
				class Item23
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={351.88077,5,246.32719};
					};
					title="Object Placements";
					description="This will help you out with what to do, or not to do with certain objects placed down manually.";
					id=124;
				};
			};
			id=133;
			atlOffset=0.10012484;
		};
		class Item7
		{
			dataType="Layer";
			name="Triggers";
			class Entities
			{
				items=18;
				class Item0
				{
					dataType="Trigger";
					position[]={479.97208,5,226.02487};
					class Attributes
					{
						name="Trg2";
						sizeA=0;
						sizeB=0;
						timeout[]={60,60,60};
					};
					id=158;
					type="EmptyDetector";
				};
				class Item1
				{
					dataType="Trigger";
					position[]={483.97507,5,226.01587};
					class Attributes
					{
						name="Trg3";
						condition="call{TriggerActivated Trg1 && TriggerActivated Trg2;}";
						sizeA=0;
						sizeB=0;
					};
					id=159;
					type="EmptyDetector";
				};
				class Item2
				{
					dataType="Trigger";
					position[]={487.96207,5,226.06987};
					class Attributes
					{
						name="Trg4";
						condition="call{!alive exampleMan1;}";
						sizeA=0;
						sizeB=0;
					};
					id=164;
					type="EmptyDetector";
				};
				class Item3
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={488.02707,5,223.95386};
					};
					title="Killed Unit";
					description="Activated after a specified unit is killed." \n "" \n "!alive = not alive." \n "alive = alive." \n "" \n "You can set this to multiple units using && meaning they would all have to be alive or dead depending on your choice." \n "" \n "You can set it so that it will fire on a random choice using || " \n "for example:" \n "!alive exampleMan1 || !alive exampleMan2;" \n "" \n "This will fire the trigger if either exampleMan1 or 2 dies." \n "" \n "NOTE: This method obviously requires whatever units you're using to have variable names.";
					id=163;
				};
				class Item4
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={475.96286,5,224.03261};
					};
					title="Player Present";
					description="This trigger is activated by Any player walking into it's radius." \n "" \n "These can be set somewhere you know a player will go to and it will activate.";
					id=160;
				};
				class Item5
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={465.98181,5,217.82358};
					};
					title="Things not to use on Triggers.";
					description="Under Type :" \n "End #1, End #2, End #3, End #4, End #5, End #6 or Lose." \n "These literally end the mission, and this is not how we do things.";
					id=173;
				};
				class Item6
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={479.97305,5,224.01286};
					};
					title="Timer";
					description="This trigger is activated by a timer, measured in seconds." \n "" \n "You set all 3 values, if you want it to be activated 1 minute after mission start set all 3 values to 60.";
					id=161;
				};
				class Item7
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={484.04379,5,223.92819};
					};
					title="Trigger Activated";
					description="This triggers condition means it will only activate once the first 2 triggers are active." \n "" \n "So, 60 seconds after mission start. Trg2 is active. Once a player moves into the radius of Trg1, that one is active." \n "" \n "Once both conditions are met, Trg3 is activated.";
					id=162;
				};
				class Item8
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={465.99631,5,237.98393};
					};
					title="Trigger Attributes";
					id=166;
				};
				class Item9
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={466.02887,5,221.84776};
					};
					title="Trigger Overuse";
					description="Triggers are constantly checking for it's condition. It's not a good idea to run a lot of them." \n "" \n "Use as few as humanly possible.";
					id=165;
				};
				class Item10
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={473.9617,5,234.06352};
					};
					title="Trigger: Activation";
					description="Type : This is covered in Advanced Waypoints with Triggers." \n "Activation : This can be set to Players or a specific side. Setting it to a side means AI can activate it too." \n "Activation Type : This can be set to Present or Not Present." \n "Repeatable : Do you want this trigger to be activated multiple times?" \n "Server Only : Generally this doesn't get used much, but if you're intent on learning BI has a wiki.";
					id=169;
				};
				class Item11
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={486.00574,5,234.05016};
					};
					title="Trigger: Effects";
					description="You can set custom effects like sound to fire upon trigger activation." \n "" \n "Note: Don't use this to start playing music mid-mission.";
					id=172;
				};
				class Item12
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={478.00687,5,233.97627};
					};
					title="Trigger: Expression";
					description="Setting a custom condition, activation or deactivation.";
					id=170;
				};
				class Item13
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={466.0094,5,234.03911};
					};
					title="Trigger: Init";
					description="Variable Name : This is where you set the variable name, generally it is a good idea to give them names, I.E ""Trg1, Trg2, Trg3"" " \n "" \n "Text : You can also set an actual ""Text"" name of it, to remind you what it does without having to actually check it.";
					id=167;
				};
				class Item14
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={481.95996,5,234.03815};
					};
					title="Trigger: Timer";
					id=171;
				};
				class Item15
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={469.93158,5,234.02669};
					};
					title="Trigger: Transformation";
					description="Position: X/Y/Z - This is the XYZ of where it was placed." \n "Rotation: Z - has literally no effect whatsoever." \n "" \n "Size: A-B-C, you can set the size of the trigger, including the height. If the mission includes helicopters then setting the C value to 20 max." \n "" \n "Shape: Circular or Rectangular.";
					id=168;
				};
				class Item16
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={480.34116,5,245.04465};
					};
					title="Triggers";
					description="Triggers can be used to enact things at a certain point as opposed to at the beginning of the mission.";
					id=150;
				};
				class Item17
				{
					dataType="Trigger";
					position[]={475.94809,5,226.04886};
					class Attributes
					{
						name="Trg1";
						sizeA=1;
						sizeB=1;
						sizeC=5;
						activationBy="ANYPLAYER";
					};
					id=157;
					type="EmptyDetector";
				};
			};
			id=199;
		};
		class Item8
		{
			dataType="Layer";
			name="Modules";
			class Entities
			{
				items=9;
				class Item0
				{
					dataType="Trigger";
					position[]={535.96826,5,216.0051};
					class Attributes
					{
						sizeA=1;
						sizeB=1;
						activationBy="ANYPLAYER";
						isRectangle=1;
					};
					id=178;
					type="EmptyDetector";
				};
				class Item1
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={551.98828,5,227.98953};
						angles[]={0,6.2808108,0};
					};
					areaSize[]={1,0,1};
					areaIsRectangle=1;
					flags=1;
					id=156;
					type="ModuleHideTerrainObjects_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="#filter";
							expression="_this setVariable [""#filter"",_value]";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=15;
								};
							};
						};
						class Attribute1
						{
							property="#hideLocally";
							expression="_this setVariable [""#hideLocally"",_value]";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"BOOL"
										};
									};
									value=0;
								};
							};
						};
						nAttributes=2;
					};
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={538.01959,5,227.90063};
					};
					id=155;
					type="ModuleEffectsSmoke_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleEffectsSmoke_F_ParticleLifeTime";
							expression="_this setVariable ['ParticleLifeTime',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=50;
								};
							};
						};
						class Attribute1
						{
							property="ModuleEffectsSmoke_F_ParticleLifting";
							expression="_this setVariable ['ParticleLifting',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ModuleEffectsSmoke_F_ColorAlpha";
							expression="_this setVariable ['ColorAlpha',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute3
						{
							property="ModuleEffectsSmoke_F_ColorBlue";
							expression="_this setVariable ['ColorBlue',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute4
						{
							property="ModuleEffectsSmoke_F_Timeout";
							expression="_this setVariable ['Timeout',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute5
						{
							property="ModuleEffectsSmoke_F_Expansion";
							expression="_this setVariable ['Expansion',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute6
						{
							property="ModuleEffectsSmoke_F_ColorRed";
							expression="_this setVariable ['ColorRed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute7
						{
							property="ModuleEffectsSmoke_F_ParticleDensity";
							expression="_this setVariable ['ParticleDensity',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=10;
								};
							};
						};
						class Attribute8
						{
							property="ModuleEffectsSmoke_F_ColorGreen";
							expression="_this setVariable ['ColorGreen',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute9
						{
							property="ModuleEffectsSmoke_F_EffectSize";
							expression="_this setVariable ['EffectSize',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ModuleEffectsSmoke_F_ParticleSpeed";
							expression="_this setVariable ['ParticleSpeed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ModuleEffectsSmoke_F_ParticleSize";
							expression="_this setVariable ['ParticleSize',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute12
						{
							property="ModuleEffectsSmoke_F_WindEffect";
							expression="_this setVariable ['WindEffect',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						nAttributes=13;
					};
				};
				class Item3
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={539.99146,5,216.00778};
					};
					id=177;
					type="ModuleEffectsSmoke_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ModuleEffectsSmoke_F_ParticleLifeTime";
							expression="_this setVariable ['ParticleLifeTime',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=50;
								};
							};
						};
						class Attribute1
						{
							property="ModuleEffectsSmoke_F_ParticleLifting";
							expression="_this setVariable ['ParticleLifting',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ModuleEffectsSmoke_F_ColorAlpha";
							expression="_this setVariable ['ColorAlpha',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute3
						{
							property="ModuleEffectsSmoke_F_ColorBlue";
							expression="_this setVariable ['ColorBlue',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute4
						{
							property="ModuleEffectsSmoke_F_Timeout";
							expression="_this setVariable ['Timeout',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute5
						{
							property="ModuleEffectsSmoke_F_Expansion";
							expression="_this setVariable ['Expansion',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute6
						{
							property="ModuleEffectsSmoke_F_ColorRed";
							expression="_this setVariable ['ColorRed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute7
						{
							property="ModuleEffectsSmoke_F_ParticleDensity";
							expression="_this setVariable ['ParticleDensity',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=10;
								};
							};
						};
						class Attribute8
						{
							property="ModuleEffectsSmoke_F_ColorGreen";
							expression="_this setVariable ['ColorGreen',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute9
						{
							property="ModuleEffectsSmoke_F_EffectSize";
							expression="_this setVariable ['EffectSize',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ModuleEffectsSmoke_F_ParticleSpeed";
							expression="_this setVariable ['ParticleSpeed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ModuleEffectsSmoke_F_ParticleSize";
							expression="_this setVariable ['ParticleSize',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute12
						{
							property="ModuleEffectsSmoke_F_WindEffect";
							expression="_this setVariable ['WindEffect',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						nAttributes=13;
					};
				};
				class Item4
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={551.9762,5,225.90305};
					};
					title="Hide Terrain Objects";
					description="If you want to clear out some buildings, bushes or other objects that are already placed on the map. This is the module to use." \n "" \n "Inside the module you can set the size of it, what kinds of objects it applies to and generic shape." \n "" \n "Do not overuse this module. Keep it as minimal as possible.";
					id=174;
				};
				class Item5
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={545.26459,5,247.05763};
					};
					title="Modules";
					description="Modules can be activated by triggers, or left alone to start with the mission start.";
					id=151;
				};
				class Item6
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={538.01337,5,225.88664};
					};
					title="Smoke Module";
					description="Using this you can set the size and colour of the smoke." \n "" \n "You can also set it's lifetime.";
					id=175;
				};
				class Item7
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={537.95813,5,213.96404};
					};
					title="Smoke Module - Trigger Activation";
					description="This smoke module is activated by a trigger using ""Any Player - Present""" \n "" \n "You right click the Trigger > Connect > Sync To" \n "" \n "This links the module directly to the Trigger." \n "" \n "This can be done with quite a few modules.";
					id=176;
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={537.97852,5.0580888,215.98692};
						angles[]={0,1.5403032,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=185;
					type="Sign_Arrow_Direction_Blue_F";
				};
			};
			id=200;
		};
		class Item9
		{
			dataType="Layer";
			name="Actionbuilder";
			class Entities
			{
				items=17;
				class Item0
				{
					dataType="Group";
					side="West";
					class Entities
					{
						items=2;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={609.88855,5.0014391,217.96213};
							};
							side="West";
							flags=7;
							class Attributes
							{
							};
							id=193;
							type="B_Soldier_F";
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={611.89679,5.0014391,217.96999};
							};
							side="West";
							flags=5;
							class Attributes
							{
							};
							id=194;
							type="B_Soldier_F";
						};
					};
					class Attributes
					{
					};
					id=192;
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={611.96918,5.0580888,221.98207};
						angles[]={0,4.6939149,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=183;
					type="Sign_Arrow_Direction_Blue_F";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={607.96973,5.0580888,221.99875};
						angles[]={0,4.6824384,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=184;
					type="Sign_Arrow_Direction_Blue_F";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={605.94092,5.0580888,219.97202};
						angles[]={0,6.2778845,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=187;
					type="Sign_Arrow_Direction_Blue_F";
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={609.97144,5.0580888,219.98618};
						angles[]={0,0.0019582747,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=195;
					type="Sign_Arrow_Direction_Blue_F";
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={615.91681,5.0580888,222.00099};
						angles[]={0,4.6939149,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=197;
					type="Sign_Arrow_Direction_Blue_F";
				};
				class Item6
				{
					dataType="Trigger";
					position[]={605.92224,5,217.98639};
					class Attributes
					{
						sizeA=1;
						sizeB=1;
						sizeC=2;
						activationBy="ANYPLAYER";
					};
					id=186;
					type="EmptyDetector";
				};
				class Item7
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={605.92493,5,221.97743};
					};
					id=180;
					type="RHNET_ab_moduleAP_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="RHNET_ab_moduleAP_F_PlayersAlive";
							expression="_this setVariable ['PlayersAlive',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="RHNET_ab_moduleAP_F_ExecutePortals";
							expression="_this setVariable ['ExecutePortals',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=-1;
								};
							};
						};
						class Attribute2
						{
							property="RHNET_ab_moduleAP_F_SafeLock";
							expression="_this setVariable ['SafeLock',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=128;
								};
							};
						};
						nAttributes=3;
					};
				};
				class Item8
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={609.92151,5,221.98082};
					};
					id=181;
					type="RHNET_ab_modulePORTAL_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="RHNET_ab_modulePORTAL_F_p_Skill";
							expression="_this setVariable ['p_Skill',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.5;
								};
							};
						};
						class Attribute1
						{
							property="RHNET_ab_modulePORTAL_F_p_Fuel";
							expression="_this setVariable ['p_Fuel',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="RHNET_ab_modulePORTAL_F_p_MinDist";
							expression="_this setVariable ['p_MinDist',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=400;
								};
							};
						};
						class Attribute3
						{
							property="RHNET_ab_modulePORTAL_F_p_Special";
							expression="_this setVariable ['p_Special',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NONE";
								};
							};
						};
						class Attribute4
						{
							property="RHNET_ab_modulePORTAL_F_p_Ammo";
							expression="_this setVariable ['p_Ammo',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1;
								};
							};
						};
						class Attribute5
						{
							property="RHNET_ab_modulePORTAL_F_p_Damage";
							expression="_this setVariable ['p_Damage',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute6
						{
							property="RHNET_ab_modulePORTAL_F_p_Positioning";
							expression="_this setVariable ['p_Positioning',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NONE";
								};
							};
						};
						nAttributes=7;
					};
				};
				class Item9
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={613.92218,5,222.00336};
					};
					id=182;
					type="RHNET_ab_moduleWP_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="RHNET_ab_moduleWP_F_WpSpeed";
							expression="_this setVariable ['WpSpeed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="UNCHANGED";
								};
							};
						};
						class Attribute1
						{
							property="RHNET_ab_moduleWP_F_WpPlacement";
							expression="_this setVariable ['WpPlacement',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute2
						{
							property="RHNET_ab_moduleWP_F_WpType";
							expression="_this setVariable ['WpType',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="MOVE";
								};
							};
						};
						class Attribute3
						{
							property="RHNET_ab_moduleWP_F_WpMode";
							expression="_this setVariable ['WpMode',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NO CHANGE";
								};
							};
						};
						class Attribute4
						{
							property="RHNET_ab_moduleWP_F_WpSpecial";
							expression="_this setVariable ['WpSpecial',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute5
						{
							property="RHNET_ab_moduleWP_F_WpFormation";
							expression="_this setVariable ['WpFormation',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NO CHANGE";
								};
							};
						};
						class Attribute6
						{
							property="RHNET_ab_moduleWP_F_WpBehaviour";
							expression="_this setVariable ['WpBehaviour',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="UNCHANGED";
								};
							};
						};
						class Attribute7
						{
							property="RHNET_ab_moduleWP_F_WpWait";
							expression="_this setVariable ['WpWait',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						nAttributes=8;
					};
				};
				class Item10
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={617.8642,5,221.9987};
					};
					id=196;
					type="RHNET_ab_moduleWP_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="RHNET_ab_moduleWP_F_WpSpeed";
							expression="_this setVariable ['WpSpeed',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="UNCHANGED";
								};
							};
						};
						class Attribute1
						{
							property="RHNET_ab_moduleWP_F_WpPlacement";
							expression="_this setVariable ['WpPlacement',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute2
						{
							property="RHNET_ab_moduleWP_F_WpType";
							expression="_this setVariable ['WpType',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="MOVE";
								};
							};
						};
						class Attribute3
						{
							property="RHNET_ab_moduleWP_F_WpMode";
							expression="_this setVariable ['WpMode',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NO CHANGE";
								};
							};
						};
						class Attribute4
						{
							property="RHNET_ab_moduleWP_F_WpSpecial";
							expression="_this setVariable ['WpSpecial',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						class Attribute5
						{
							property="RHNET_ab_moduleWP_F_WpFormation";
							expression="_this setVariable ['WpFormation',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="NO CHANGE";
								};
							};
						};
						class Attribute6
						{
							property="RHNET_ab_moduleWP_F_WpBehaviour";
							expression="_this setVariable ['WpBehaviour',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="UNCHANGED";
								};
							};
						};
						class Attribute7
						{
							property="RHNET_ab_moduleWP_F_WpWait";
							expression="_this setVariable ['WpWait',_value,true];";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0;
								};
							};
						};
						nAttributes=8;
					};
				};
				class Item11
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={609.86041,5,247.83734};
					};
					title="Actionbuilder";
					description="Actionbuilder is used as a dynamic spawn system, primarily used when missions will have a heavy AI count, or if there are multiple ways players can go throughout the mission." \n "" \n "Actionbuilder can essentially cover all bases, but should not be used to populate the mission to begin with." \n "" \n "NOTE: You should never actively rely too heavily on Actionbuilder.";
					id=149;
				};
				class Item12
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={605.89136,5,223.99649};
					};
					title="Actionpoint";
					description="The Actionpoint is basically the beginning of the Actionbuilder series." \n "" \n "Actionpoint has multiple options." \n "Minimum Players Alive: Should always be set to 1." \n "" \n "Maximum Units Alive: This is an AI cap which prevents the actionpoint from activating if the AI count is at this number or higher." \n "" \n "Executed Portals: This is how it will decide which of the synced portals to activate, Generally it's best to not use too many portals based from one actionpoint. It's useful if you're looking for randomisation with where your units will come from.";
					id=188;
				};
				class Item13
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={601.94531,5,221.92068};
					};
					title="Basic Actionbuilder Setup";
					description="To function, Actionbuilder requires an Actionpoint & Portal." \n "" \n "Blue Arrows will mark which way you Sync from one to the next.";
					id=179;
				};
				class Item14
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={609.93018,5,223.94905};
					};
					title="Portal";
					description="The portal activates when the Actionpoint does, It's the designated ""spawning point"" for AI you want to spawn for it." \n "" \n "Portal has a few options you can change." \n "" \n "Positioning: This can be set to where you place the AI on the map, or have them spawn directly on the portal." \n "" \n "No Player Radius : By default it's set to 400m, if there is a singular player closer than that it will not spawn units." \n "" \n "Special: If you use Actionbuilder for Helicopters you can spawn them in the air, which will automatically mean they're flying.";
					id=189;
				};
				class Item15
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={613.92828,5,217.97592};
					};
					title="Units";
					description="Units must be synced directly to the Portal." \n "" \n "You only need to sync the ""Group Leader""  to the portal, not the entire group.";
					id=191;
				};
				class Item16
				{
					dataType="Comment";
					class PositionInfo
					{
						position[]={613.94769,5,223.96564};
					};
					title="Waypoint";
					description="Once the Portal spawns units, they will move to the waypoint that is Synced to the Portal." \n "" \n "Waypoint can be set to any of the usual waypoints and synced to another Actionbuilder waypoint to create the chain." \n "" \n "You can also set the behaviour of the units as they move from waypoint to waypoint.";
					id=190;
				};
			};
			id=201;
		};
	};
	class Connections
	{
		class LinkIDProvider
		{
			nextID=6;
		};
		class Links
		{
			items=6;
			class Item0
			{
				linkID=0;
				item0=178;
				item1=177;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item1
			{
				linkID=1;
				item0=182;
				item1=181;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item2
			{
				linkID=2;
				item0=181;
				item1=180;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item3
			{
				linkID=3;
				item0=186;
				item1=180;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item4
			{
				linkID=4;
				item0=193;
				item1=181;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item5
			{
				linkID=5;
				item0=196;
				item1=182;
				class CustomData
				{
					type="Sync";
				};
			};
		};
	};
};
